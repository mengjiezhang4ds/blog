"0","clusterExport(cl,varlist = c(""X"",""Y"",""Missing"","
"0","                             ""TT"",""T"",""N"",""squeezefun"",""EM_estV2""))"
"0",""
"0","# 定义函数以提取信息"
"0","fill_tidy <- function(j) {"
"0","  library(dplyr)"
"0","  library(tidyr)"
"0","  library(purrr)"
"0","  # 声明变量"
"0","  # TT <- 36"
"0","  # T <- NROW(X)"
"0","  # N <- NCOL(X)"
"0","  # 数据产生"
"0","  Twindow <- (j - TT):(j)"
"0","  tempX <- X[Twindow, , ]"
"0","  tempY <- Y[Twindow, ]"
"0","  tempMissing <- Missing[Twindow, ]"
"0","  "
"0","  DeleteI <- which(apply(tempMissing, 2, sum) > 1 / 3 * length(Twindow)) ## %delete individuals with more than 30% missing values"
"0","  "
"0","  dim_X <- dim(X)"
"0","  rm(Twindow,Missing,Y,X)"
"0","  "
"0","  if (length(DeleteI) == 0) {"
"0","    DeleteI <- dim(tempMissing)[2] + 1"
"0","  }"
"0","  tempMissing <- tempMissing[, -DeleteI]"
"0","  tempY <- tempY[, -DeleteI]"
"0","  tempX <- tempX[, -DeleteI, ]"
"0","  # MissingT <- apply(tempMissing, 1, sum)"
"0","  "
"0","  Ntemp <- dim(tempY)[2]"
"0","  DeleteT <- which(apply(tempMissing, 1, sum) > 1 / 3 * Ntemp) ## %delete individuals with more than 30% missing values"
"0","  "
"0","  if (length(DeleteT) == 0) {"
"0","    DeleteT <- length(apply(tempMissing, 1, sum)) + 1"
"0","  }"
"0","  "
"0","  DeleteT <- c(DeleteT, 61)"
"0","  DeleteT <- DeleteT[!duplicated(DeleteT)]"
"0","  DeleteT <- DeleteT[-which(DeleteT == 61)]"
"0","  tempMissingF <- tempMissing[-DeleteT, ]"
"0","  tempYF <- tempY[-DeleteT, ]"
"0","  tempXF <- tempX[-DeleteT, , ]"
"0","  "
"0","  lt <- dim(tempYF)[1]"
"0","  tempMissing <- tempMissingF[-lt, ]"
"0","  tempY <- tempYF[-lt, ]"
"0","  tempX <- tempXF[-lt, , ]"
"0","  "
"0","  rm(tempYF,tempMissingF)"
"0","  "
"0","  if (dim(tempY)[1] < 24) {"
"0","    next"
"0","  }"
"0","  "
"0","  result <- EM_estV2(tempY, tempX, tempX, tempMissing)"
"0","  tempBT <- result$BT"
"0","  tempBT_fixT <- result$BT_fixT"
"0","  tempBN <- result$BN"
"0","  "
"0","  rm(result)"
"0","  "
"0","  avegBT <- apply(tempBT[(TT - 4):TT, ], 2, mean)"
"0","  avegBT_fixT <- apply(tempBT_fixT[(TT - 4):TT, ], 2, mean)"
"0","  Nt <- dim(tempXF)[2]"
"0","  "
"0","  res <- setdiff(1:118, DeleteI) %>%"
"0","    as_tibble() %>%"
"0","    setNames(""column"") %>%"
"0","    mutate(group = 1:n()) %>%"
"0","    group_by(group) %>%"
"0","    mutate(Y = map(.x = group, .f = function(x) {"
"0","      ifelse(length(dim_X) > 2,"
"0","             sum(avegBT * c(1, as.vector(squeezefun(tempXF[lt, x, ])))),"
"0","             sum(avegBT * c(1, (tempXF[lt, x, ])))"
"0","      )"
"0","    })) %>%"
"0","    mutate(Y_fixT = map(.x = group, .f = function(x) {"
"0","      ifelse(length(dim_X) > 2,"
"0","             sum(avegBT_fixT * c(1, as.vector(squeezefun(tempXF[lt, x, ])))),"
"0","             sum(avegBT_fixT * c(1, (tempXF[lt, x, ])))"
"0","      )"
"0","    })) %>%"
"0","    mutate(Xi = map(.x = group, .f = function(x) {"
"0","      Xi <- t(tempXF[lt, , ]) %>%"
"0","        .[, -x] %>%"
"0","        t()"
"0","      Xi <- matrix(Xi, NROW(Xi) * NCOL(Xi), 1)"
"0","      Xi[is.na(Xi)] <- 0"
"0","      Xi"
"0","    })) %>%"
"0","    mutate(tempBN = map(.x = group, .f = function(x) {"
"0","      tempBN[x, ][is.na(tempBN[x, ])] <- 0"
"0","      tempBN"
"0","    })) %>%"
"0","    mutate(Y_p = pmap(list(group, Xi, tempBN), .f = function(x, y, z) {"
"0","      z[x, ] %*% y"
"0","    })) %>%"
"0","    mutate(Y_new = map2(.x = Y, .y = Y_p, .f = function(x, y) {"
"0","      x + y"
"0","    })) %>%"
"0","    mutate(Y_fixT_p = pmap(list(group, Xi, tempBN), .f = function(x, y, z) {"
"0","      z[x, ] %*% y"
"0","    })) %>%"
"0","    mutate(Y_fixT_new = map2(.x = Y_fixT, .y = Y_fixT_p, .f = function(x, y) {"
"0","      x + y"
"0","    })) %>%"
"0","    dplyr::select(column, Y, Y_p, Y_new, Y_fixT, Y_fixT_p, Y_fixT_new) %>%"
"0","    mutate(t = j) %>%"
"0","    unnest(cols = c(Y, Y_p, Y_new, Y_fixT, Y_fixT_p, Y_fixT_new)) %>%"
"0","    ungroup() %>%"
"0","    mutate(Y, Y_fixT, Y_p = Y_p[, 1], Y_fixT_p = Y_fixT_p[, 1], Y_new = Y_new[, 1], Y_fixT_new = Y_fixT_new[, 1]) %>%"
"0","    dplyr::select(t, column, Y_new, Y_fixT_new) %>%"
"0","    setNames(c(""r"", ""c"", ""Y"", ""Y_fixT""))"
"0","  "
"0","  return(res)"
"0","}"
